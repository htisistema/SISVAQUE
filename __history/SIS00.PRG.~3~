#INCLUDE "wingdi.ch"
#INCLUDE "winuser.ch"
#INCLUDE "COMMCTRL.CH"
#INCLUDE "HRBMENU.CH"
#include "firebird.ch"     // Needed if you plan to use native connection to Firebird
#include "sqlrdd.ch"
#define NBotaoEcf1  2950
#define NBotaoEcf2  2951
#define NBotaoEcf3  2952
#define NBotaoEcf4  2953
#define NBotaoEcf5  2954
#define NBotaoEcf6  2955
#define NBotaoEcf7  2956
#define NBotaoEcf8  2957

#define MENU1_1  2960
#define MENU1_2  2961
#define MENU1_3  2962
#define MENU1_4  2963
#define MENU1_5  2964
#define MENU1_6  2965
#define MENU1_7  2966
#define MENU1_8  2967
#define MENU1_9  2968
#define MENU1_10  2969
#define MENU1_11  12969

#define MENU2_1  2970
#define MENU2_2  2971
#define MENU2_3  2972
//#define MENU2_4  2973
#define MENU2_5  2974
#define MENU2_6  2975
#define MENU2_7  2976
#define MENU2_1_1  2977
#define MENU2_8  2978
#define MENU2_9  2979

#define MENU3_1  3970
#define MENU3_2  3971
#define MENU3_3  3972
#define MENU3_4  3973
#define MENU3_5  3974
#define MENU3_6  3975
#define MENU3_7  3976
#define MENU3_8  3977

//#define MENU_F1  4001
#define MENU_F2  4002
#define MENU_F3  4003
#define MENU_F4  4004
#define MENU_F5  4005
#define MENU_F6  4006
#define MENU_F7  4007
#define MENU_F8  4008
#define MENU_F9  4009
#define MENU_F10 4010
#define MENU_F11 4011
#define MENU_F12 4012
#define MENU_F13 4013
#define MENU_F14 4014
#define MENU_F15 4015
#define MENU_F16 4016
#define MENU_F17 4017
#define MENU_F18 4018
#define MENU_F19 4019

#define MENUPROD 2980

#define MENUECFSAI_1 2981

#define NFE_1 5001
#define NFE_2 5002
#define NFE_3 5003
#define NFE_4 5004
#define NFE_5 5005
#define NFE_6 5006
#define NFE_7 5007
#define NFE_8 5008
#define NFE_9 5009
*******************
* MENU PRINCIPAL
*******************
FUNCTION sis00()
***************
MEMVAR mdata_sis,memp_resa,mversao,cod_operado,mcaminho,mol,sistema
LOCAL mopcao,tela_ecf,m_mtz := {},lin,linhas,linha := 0,mtela_ecf,mtempo :=0

PUBLIC mcod_vend,mmens,mgerenciador:='',chave_priv:='',mn_sac0

SETCOLOR('W/B+,B/w,,,GR+/B')
op_tela(00,00,50,120,memp_resa+SPACE(5)+mpaf_hrb+'-'+mversao+IF(m_line = 'OFF','  *** OFF LINE ***','')+SPACE(5)+'FRENTE DE LOJA - Data:'+DTOC(mdata_sis)+' - '+ver_dia(mdata_sis)+' - '+mrelease)
wvw_maximize(0)
WVW_CenterWindow(,.T.,.T.)

set key 23 to
mdata_sis := DATE()
SETCOLOR('W+/B+,B/w,,,GR+/B')
WVW_DrawImage( ,00,00,49,120,ALLTRIM(m_indiv[1,3])+'HRBLOGO.JPG',.F.,.F.)
//WVW_DrawImage( ,00,00,45,MAXCOL(),ALLTRIM(m_indiv[1,3])+'HRBLOGO.JPG',.T.,.F.)
//ATENCAO('OK')

IF FILE(ALLTRIM(m_indiv[1,3])+'HRBFIRMA.JPG')
        WVW_DrawImage( ,02,04,22,74,ALLTRIM(m_indiv[1,3])+'HRBFIRMA.JPG',.T.,.F.)
ENDIF
IF FILE(ALLTRIM(m_indiv[1,31])+cod_operado+'.jpg')
        WVW_DrawImage( ,00,88,06,100,ALLTRIM(m_indiv[1,31])+cod_operado+'.jpg',.T.,.F.)
        WVW_DrawLabel(,07,93,'OPERADOR',,,,, 'terminal',13,4,,,,,)
ENDIF

mtela_ecf := WVW_SAVESCREEN(,00,00,49,120)
mensagem('Escolha a opcao que desejar ou <ESC> p/Retornar')

SET KEY 28 TO menu_cons()       // F1 MENU DE CONSULTAS
SET KEY 287 TO alt_sen()        // ALT+S
SET KEY -41 TO calcu()        // F12 calculadora

setcor(1)
exibi_prg('SIS00')

WVW_TBCreate( , .T.,TBSTYLE_LIST, 0,3,3)

WVW_TBAddButton( ,NBotaoEcf1,' ','<V> E N D A',1)
WVW_TBAddButton( ,NBotaoEcf6,' ','PRE-VENDA',1)
WVW_TBAddButton( ,NBotaoEcf2,' ','<P>ordutos',1)
WVW_TBAddButton( ,NBotaoEcf3,' ','Mensagem email',1)
WVW_TBAddButton( ,NBotaoEcf4,' ','Deixar na Senha',1)
WVW_TBAddButton( ,NBotaoEcf5,' ','<F4> MENU FISCAL',1)
WVW_TBAddButton( ,NBotaoEcf8,' ','Carga do PDV',1)
WVW_TBAddButton( ,NBotaoEcf7,' ','Sair do Sistema',1)

WVW_SBCreate()
WVW_SBAddPart(,,150,0,.F.)
WVW_SBSetText(,0,'{SAC0}')
WVW_SBAddPart(,,150,0,.F.)
WVW_SBSetText(,1,'Empresa: '+ALLTRIM(mcodempresa)+'-'+memp_resa)
WVW_SBAddPart(,,160,0,.F.)
WVW_SBSetText(,2,'Operador: '+ALLTRIM(cod_operado))
WVW_SBAddPart(,,150,0,.F.)
WVW_SBSetText(,3,'Term.: '+NETNAME())
WVW_SBAddPart(,,150,0,.F.)
IF ! EMPTY(m_set[1,82])
	IF cod_operado = '999'
        	WVW_SBSetText(,4,'   ** Banco: FIREBIRD ** '+STRZERO(DATE() - CTOD(SUBSTR(m_set[1,82],1,2)+'/'+SUBSTR(m_set[1,82],3,2)+'/'+SUBSTR(m_set[1,82],5,2)),3))
	ELSE
        	WVW_SBSetText(,4,'   ** Banco: FIREBIRD **')
        ENDIF
ELSE
        WVW_SBSetText(,4,'   >> Banco: FIREBIRD <<')
ENDIF
//WVW_SBAddPart(,,160,0,.F.)
WVW_SBSetText(,5,'ACBR')

hEcfMenu   = WVW_CreateMenu( )
hEcfMenu1   = WVW_CreateMenu( )
hEcfMenu2   = WVW_CreateMenu( )
hEcfMenu2_1   = WVW_CreateMenu( )
hEcfMenu3   = WVW_CreateMenu( )
hMenufiscal = WVW_CreateMenu( )
submenuNFE = WVW_CreateMenu( )
//hMenuLMFS = WVW_CreateMenu( )
//hMenuMFDesp = WVW_CreateMenu( )
hMenuVP = WVW_CreateMenu( )
hMenuMFDEst = WVW_CreateMenu( )

WVW_AppendMenu( hEcfMenu   , MF_ENABLED + MF_POPUP , hEcfMenu1   , "Emissao",  )
WVW_AppendMenu( hEcfMenu   , MF_ENABLED + MF_POPUP , hEcfMenu3   , "Arquivo",  )
WVW_AppendMenu( hEcfMenu   , MF_ENABLED + MF_POPUP , hEcfMenu2   , "Relatorios",  )
WVW_AppendMenu( hEcfMenu   , MF_ENABLED + MF_POPUP , hMenufiscal   , "MENU FISCAL",  )
WVW_AppendMenu( hEcfMenu   , MF_ENABLED + MF_STRING , MENUECFSAI_1   , "Sair do Sistema",  )

WVW_AppendMenu( hEcfMenu1   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_STRING , MENU1_1 , " Venda de Produtos        ",  )
IF m_line = 'OFF'
        WVW_AppendMenu( hEcfMenu1   , MF_GRAYED + MF_STRING , MENU1_2 , " Emissao de PRE-VENDA     ",  )
ELSE
        WVW_AppendMenu( hEcfMenu1   , MF_ENABLED + MF_STRING , MENU1_2 , " Emissao de PRE-VENDA     ",  )
ENDIF
WVW_AppendMenu( hEcfMenu1   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_STRING , MENU1_3 , " Cancela Cupom Fiscal",  )
//WVW_AppendMenu( hEcfMenu1   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_STRING , MENU1_4 , " Cancela Item Generico    ",  )
WVW_AppendMenu( hEcfMenu1   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_STRING , MENU1_6 , " Abrir Gaveta",  )
WVW_AppendMenu( hEcfMenu1   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_STRING , MENU1_7 , " Transacoes Pendentes",  )
WVW_AppendMenu( hEcfMenu1   , MF_ENABLED + MF_STRING , MENU1_8 , " Cancelar PRE-VENDAS      ",  )
WVW_AppendMenu( hEcfMenu1   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_STRING , MENU1_9 , " Sangria ",  )
WVW_AppendMenu( hEcfMenu1   , MF_ENABLED + MF_POPUP , submenuNFE," Notas Fiscais NFE        ",  )
WVW_AppendMenu( hEcfMenu1   , MF_ENABLED + MF_STRING , MENU1_10," Notas Fiscais Manual       ",  )
WVW_AppendMenu( hEcfMenu1   , MF_ENABLED + MF_STRING , MENU1_11," Balanco       ",  )

// RELATORIOS

WVW_AppendMenu( hEcfMenu2   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_POPUP  ,  MENU2_1 , " Letura X (ABERTURA do Caixa)          ",  )
WVW_AppendMenu( hEcfMenu2   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_POPUP  ,  MENU2_2,  " Reducao Z (FECHAMENTO do Caixa)       ",  )
//WVW_AppendMenu( hEcfMenu2   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_STRING ,  MENU2_3 , " Leitura da Memoria Fiscal             ",  )
WVW_AppendMenu( hEcfMenu2   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_POPUP  ,  hEcfMenu2_1, " Funcoes Administrativa   ",  )
//WVW_AppendMenu( hEcfMenu2   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_STRING ,  MENU2_7 , " Relatorio Registro 60 (SINTEGRA)",  )
//WVW_AppendMenu( hEcfMenu2   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_STRING ,  MENU2_8 , " Relatorio Registro CAT52",  )
//WVW_AppendMenu( hEcfMenu2   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_STRING ,  MENU2_9 , " Relatorio Registro SPED ",  )

WVW_AppendMenu( hEcfMenu2_1   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_STRING ,  MENU2_5 , " Gereciador Padrao(VISA,MASTERCARD e AMEX) - (PAY&GO)",  )
WVW_AppendMenu( hEcfMenu2_1   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_STRING ,  MENU2_6 , " HIPERCARD - (PAY&GO)",  )

// ARQUIVO

WVW_AppendMenu( hEcfMenu3   , IF(m_line = 'ON',MF_ENABLED,MF_GRAYED) + MF_POPUP  ,  MENU3_1 , " Produtos ",)
WVW_AppendMenu( hEcfMenu3   , IF(m_line = 'ON',MF_ENABLED,MF_GRAYED) + MF_POPUP  ,  MENU3_2,  " Clientes ",)
WVW_AppendMenu( hEcfMenu3   , IF(m_line = 'ON',MF_ENABLED,MF_GRAYED) + MF_STRING ,  MENU3_3 , " Operador/Vendedor ",)
WVW_AppendMenu( hEcfMenu3   , IF(m_line = 'ON',MF_ENABLED,MF_GRAYED) + MF_STRING ,  MENU3_4 , " Formas de Pagamentos ",)
WVW_AppendMenu( hEcfMenu3   , IF(m_line = 'ON',MF_ENABLED,MF_GRAYED) + MF_STRING ,  MENU3_7 , " CST(Codigo Situacao Tributaria)",)
WVW_AppendMenu( hEcfMenu3   , IF(m_line = 'ON',MF_ENABLED,MF_GRAYED) + MF_STRING ,  MENU3_8 , " Operacao de Nota (CFOP)",)
WVW_AppendMenu( hEcfMenu3   , IF(m_line = 'ON',MF_ENABLED,MF_GRAYED) + MF_STRING ,  MENU3_6 , " Configuracao Aliquotas ",)
WVW_AppendMenu( hEcfMenu3   , MF_ENABLED + MF_STRING ,  MENU3_5 , " Configuracao do ECF",  )

// MENU FISCAL

WVW_AppendMenu( hMenufiscal   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_POPUP ,  MENU2_1_1 , " LX  ",  )
WVW_AppendMenu( hMenufiscal   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_STRING ,  MENU2_3 , " LMFC",  )
WVW_AppendMenu( hMenufiscal   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_STRING ,  MENU_F10 , " LMFS",  )
WVW_AppendMenu( hMenufiscal   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_STRING ,  MENU_F12, " Espelho MFD",  )
WVW_AppendMenu( hMenufiscal   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_STRING ,  MENU_F14, " Arquivo MFD",  )
WVW_AppendMenu( hMenufiscal   , MF_ENABLED + MF_STRING ,  MENU_F3 , " Tabela de Produto",  )
WVW_AppendMenu( hMenufiscal   , MF_ENABLED + MF_POPUP ,  hMenuMFDEst, " Estoque",  )
WVW_AppendMenu( hMenufiscal   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_STRING ,  MENU_F5 , " Movimento por ECF",  )
WVW_AppendMenu( hMenufiscal   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_STRING ,  MENU_F6 , " Meio de Pagamento",  )
WVW_AppendMenu( hMenufiscal   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_STRING ,  MENU_F7 , " Identificao do PAF-ECF",  )
WVW_AppendMenu( hMenufiscal   , MF_ENABLED + MF_POPUP  ,  hMenuVP , " Vendas do Periodo",  )
WVW_AppendMenu( hMenufiscal   , MF_ENABLED + MF_STRING ,  MENU_F9 , " Tab.Indice Tecnico Producao",  )
WVW_AppendMenu( hMenufiscal   , IF(mecf_ligada = 1,MF_ENABLED,MF_GRAYED) + MF_STRING ,  MENU_F18 , " Parametro de Configuracao",  )
WVW_AppendMenu( hMenufiscal   , MF_ENABLED + MF_STRING ,  MENU_F19 , " Troco em Cartao ",  )

WVW_AppendMenu( hMenuVP   , MF_ENABLED + MF_STRING ,  MENU_F11 , " Sintegra    ",  )
WVW_AppendMenu( hMenuVP   , MF_ENABLED + MF_STRING ,  MENU_F13 , " SPED ",  )
//WVW_AppendMenu( hMenuVP   , MF_ENABLED + MF_STRING ,  MENU_F15 , " SPED - PIS/CONFIS ",  )


WVW_AppendMenu( submenuNFE   , MF_ENABLED + MF_STRING , NFE_1,  "0-> Emissao << NFe >> (CTRL+E)",  )
WVW_AppendMenu( submenuNFE   , MF_ENABLED + MF_STRING , NFE_2,  "1-> Emissao p/Agrupamento << NFe >>",  )
WVW_AppendMenu( submenuNFE   , MF_ENABLED + MF_STRING , NFE_3,  "2-> 2a. Via << NFe >>",  )
WVW_AppendMenu( submenuNFE   , MF_ENABLED + MF_STRING , NFE_4,  "3-> Cancelamento         ",  )                                                                                                                            
WVW_AppendMenu( submenuNFE   , MF_ENABLED + MF_STRING , NFE_5,  "4-> Alterar/Exclusao     ",  )
WVW_AppendMenu( submenuNFE   , MF_ENABLED + MF_STRING , NFE_6,  "5-> Emissao << NFe >> CORRECAO ",  )
WVW_AppendMenu( submenuNFE   , MF_ENABLED + MF_STRING , NFE_7,  "6-> Manutencao da << NFe >>",  )
WVW_AppendMenu( submenuNFE   , MF_ENABLED + MF_STRING , NFE_8,  "7-> Estorno CANCELAMENTO ",  )
WVW_AppendMenu( submenuNFE   , MF_ENABLED + MF_STRING , NFE_9,  "8-> Ultimo No.da Nota    ",  )




WVW_AppendMenu( hMenuMFDEst   , MF_ENABLED + MF_STRING ,  MENU_F16 , " Estoque TOTAL",  )
WVW_AppendMenu( hMenuMFDEst   , MF_ENABLED + MF_STRING ,  MENU_F17 , " Estoque PARCIAL ",  )

WVW_SetMenu(, hEcfMenu )

SETINKEYAFTERBLOCK({|nkey_ecf| AfterInkey1(nkey_ecf)})
WVW_RESTSCREEN(,00,00,49,120,mtela_ecf,.T.)
WHILE .T.
        WVW_RESTSCREEN(,00,00,49,120,mtela_ecf,.T.)
        setcor(2)
        Botao(50,0,50,120)
        WVW_DrawBoxGet(,50,0,121)
        limpa(50,0,50,120)
        DEVPOS(50,02);DEVOUT('Impressora Marca: '+RTRIM(m_ModeloImp)+'  -  Modelo: '+RTRIM(m_MarcaImp)+'  -  Numero de Serie: '+RTRIM(m_numeroSerie)+'  -  No.Caixa: '+RTRIM(m_numerocaixa))
        setcor(1)
        mensagem('Lendo o Arquivo SACCFG.INI...')
        lin := MEMOLINE(MEMOREAD('SACCFG.INI'),110,1,,)
        linhas := linha := 0
        linhas := MLCOUNT(MEMOREAD('SACCFG.INI'),110)
        m_cfg := {}
        FOR linha = 1 TO  linhas
                lin := MEMOLINE(MEMOREAD('SACCFG.INI'),110,linha,,)
                IF SUBSTR(lin,5,1) = 'C'
                        AADD(m_cfg,ALLTRIM(SUBSTR(lin,30)))
                ELSE
                        AADD(m_cfg,VAL(SUBSTR(lin,30)))
                ENDIF
        NEXT
        fclose('saccfg.ini')

        mensagem('Escolha sua Opcao...')
        Wvw_SetTitle( ,memp_resa+SPACE(10)+mpaf_hrb+'-'+mversao+IF(m_line = 'OFF','  *** OFF LINE ***','')+SPACE(10)+'FRENTE DE LOJA - Data:'+DTOC(mdata_sis)+' - '+ver_dia(mdata_sis)+' - '+mrelease)
        exibi_prg('SIS00')
        INKEY(0)
        setcor(1)
        IF LASTKEY() = ASC('V') .OR. LASTKEY() = ASC('v')
                IF mecf_ligada = 0
                        atencao('A impressora estar Desligada ou Desconectada...')
                        LOOP
                ENDIF
                IF m_line = 'OFF'
                        sac23off()
                ELSE
                        sac23ecf1()
                ENDIF
        //ELSEIF LASTKEY() = ASC('E') .OR. LASTKEY() = ASC('e')
        //        v_reducao_z()
        ELSEIF LASTKEY() = 275  //ALT+R
                MYRUN('SISCOM')
        ELSEIF LASTKEY() = -3 // F2 MENU FISCAL
                menu_fiscal()
        ELSEIF LASTKEY() = 305      // alt+n
                menu_fiscal()
        ELSEIF LASTKEY() = ASC('P') .OR. LASTKEY() = ASC('p')
                IF(m_set[1,93] <> 'A',f4_merc(),f4_merc1())
                //f4_merc()
        ELSEIF LASTKEY() = -40  // F12 calculadora
                calcu()
        ELSEIF LASTKEY() = 290 .OR. LASTKEY() = 7
                abrir_gaveta()
                //IBR_ABRE_GAVETA()
        ELSEIF LASTKEY() = 27
                IF 'S' = op_simnao('N','Deseja FINALIZAR O SISTEMA:')
                        EXIT
                        IBR_DESATIVA()
                        IBR_END()
                        wvw_lclosewindow()
                        QUIT
                ENDIF
        ENDIF
ENDDO
//IBR_END()
WVW_TBDestroy()
WVW_DestroyMenu(hEcfMenu)
WVW_DestroyMenu(hEcfMenu1)
WVW_DestroyMenu(hEcfMenu2)
IBR_DESATIVA()
IBR_END()
wvw_lclosewindow()
QUIT
RETURN .F.
//RETURN NIL
************************************** F I M *****************************************
FUNCTION AfterInkey1(nkey_ecf)
******************************
LOCAL MenuId_ecf,mvet_z,mped_z,i:=0,z:=0,cons_merc,mvlr_aliq,mdocumento,mnum_ecf,mvalor:=0,p:=0,mop_imp:='I',mvlr_abertura := 0,;
      mmes := '  ',mano := '    ',mcaminho,mdata,mlinha:=space(150),mind_trib,mvlr_acumulado,mindice,maux := {},;
      mtempo:=0
PRIVATE m_Operacoes := ''

PUBLIC M_Valor := Space(19),m_DadosReducao := Space(1279),DataReducao := Space(7),mdata_aux := Space(7),HoraReducao := Space(7)

IF nkey_ecf=1024
        IF m_line # 'OFF'
                IF ! AbriArq("sacmerc","merc",,'*');RETURN NIL;ENDIF
                SELE('merc');ORDSETFOCUS(1)
                GO TOP
                mtempo :=  VAL(SUBSTR(TIME(),1,2)) - VAL(SUBSTR(merc->hora,1,2))
                IF EOF()
                        carga_dados()
                ELSEIF merc->data_atu < mdata_sis
                        carga_dados()
                ELSEIF mtempo >= 3        //4
                        carga_dados()
                ELSEIF EMPTY(merc->hora)
                        carga_dados()
                ELSEIF EMPTY(merc->data_atu)
                        carga_dados()
                //ELSE
                //        BROWSE(01,00,30,120)
                ENDIF
        ENDIF
        mensagem('Escolha a opcao que desejar')
        setcor(1)
        MenuId_ecf:=WVW_GETLASTMENUEVENT()
        IF MenuId_ecf=NBotaoEcf1      // BOTAO EMISSAO DE PEDIDO
                IF mecf_ligada = 0
                        atencao('A impressora estar Desligada ou Desconectada...')
                ELSE
                        IF m_line = 'OFF'
                                sac23off()
                        ELSE
                                sac23ecf1()
                        ENDIF
                ENDIF
        ELSEIF MenuId_ecf=NBotaoEcf2  // CONSULTA DE PRODUTOS
                 IF(m_set[1,93] <> 'A',f4_merc(),f4_merc1())
        ELSEIF MenuId_ecf=NBotaoEcf3  // CONSULTA DE EMAIL
                sacemail()
        ELSEIF MenuId_ecf=MENU1_1      // GRUPO
                IF m_line = 'OFF'
                        sac23off()
                ELSE
                        sac23ecf1()
                ENDIF
        ELSEIF MenuId_ecf=MENU1_2  // PRE-VENDA
                sac_pv()
        ELSEIF MenuId_ecf=MENU1_3
                cancelar_cupom(,1)
        //ELSEIF MenuId_ecf=MENU1_4
        //        can_item()
        ELSEIF MenuId_ecf=MENU1_6
                abrir_gaveta()
        ELSEIF MenuId_ecf=MENU1_7  // TRANSACAO PEDENTES
                //consulta_trans()
                //jggj,trans_pedente()
        ELSEIF MenuId_ecf=MENU1_8  // CANCELAR PRE-VENDAS
                sac_pv2()
        ELSEIF MenuId_ecf=MENU1_9  // SANGRIA
                mvlr_abertura := 0
                op_tela(10,10,12,60,' SANGRIA DO CAIXA')
                DEVPOS(01,00);DEVOUT('Valor da SANGRIA R$:')
                @ 01,COL()+1 GET mvlr_abertura PICT '999,999.99'
                READ
                mopcao := op_simnao('S','Confirma o Valor da SANGRIA do Caixa:')
                wvw_lclosewindow()
                IF LASTKEY() = 27 .OR. mopcao = 'N'
                        RETURN .F.
                ENDIF
                mcons_r4 := {}
                sr_getconnection():exec("SELECT SUM(vlr_liq/100) FROM r4 WHERE data_mov ="+sr_cdbvalue(mdata_sis),,.t.,@mcons_r4)
                IF LEN(mcons_r4) > 0
                        IF mvlr_abertura > mcons_r4[1,1]
                                atencao('Nao pode Fazer esta SANGRIA porque o valor vendido menor que Solicitado...')
                                RETURN NIL
                        ENDIF
                ELSE
                        atencao('Nao pode Fazer esta SANGRIA porque o valor vendido menor que Solicitado...')
                        RETURN NIL
                ENDIF
                sCont := IBR_COMANDO( 'ECF.Sangria',{STR((mvlr_abertura*100)/100),,,"Dinheiro"},,.T. )
                NCupom := num_cupom()
                Operacoes = Space(7)
                Operacoes := SUBSTR(IBR_COMANDO( 'ECF.NumGNF',,,.T. ),5)
                Operacoes := SUBSTR(Operacoes,1,6)
                
                SET CENTURY ON

                mhora := TIME()
                mhora := STRTRAN(mhora,':','')+SPACE(8-LEN(STRTRAN(mhora,':','')))
                mlinha := m_numeroSerie+SPACE(20-LEN(m_numeroSerie))+; //1
                        m_MFAdicional+; //2
                        m_ModeloImp+; //3
                        STRZERO(VAL(m_numerocaixa),2)+; //4
                        NCupom+SPACE(6-LEN(NCupom))+; //5
                        m_Operacoes+SPACE(6-LEN(m_operacoes))+; //6
                        STRZERO(0,6)+; //7
                        STRZERO(0,4)+; //8
                        'CN'+; //9
                        SUBSTR(DTOC(mdata_sis),7,4)+SUBSTR(DTOC(mdata_sis),4,2)+SUBSTR(DTOC(mdata_sis),1,2)+SPACE(8-LEN(SUBSTR(DTOC(mdata_sis),7,4)+SUBSTR(DTOC(mdata_sis),4,2)+SUBSTR(DTOC(mdata_sis),1,2)))+; //10
                        mhora+; //11
                        DTOC(mdata_sis)

                sr_getconnection():exec('INSERT INTO r6 ('+;
                        'NUMERO_FAB  ,'+; //1
                        'MF_ADICIONAL,'+; //2
                        'MODELO_ECF  ,'+; //3
                        'NUMERO_USU  ,'+; //4
                        'COO         ,'+; //5
                        'GNF         ,'+; //6
                        'GRG         ,'+; //7
                        'CDC         ,'+; //8
                        'DENOMICAO   ,'+; //9
                        'DATA_FINAL  ,'+; //10
                        'HORA_FINAL  ,'+; //11
                        'DATA_MOV    ,'+; //12
                        'CHV_CRIPT   ,'+; //13
                        'SR_DELETED )'+;
                        ' VALUES ('+;
                        sr_cdbvalue(m_numeroSerie)+','+; //1
                        sr_cdbvalue(m_MFAdicional)+','+; //2
                        sr_cdbvalue(m_ModeloImp)+','+; //3
                        sr_cdbvalue(STRZERO(VAL(m_numerocaixa),2))+','+; //4
                        sr_cdbvalue(NCupom)+','+; //5
                        sr_cdbvalue(m_Operacoes)+','+; //6
                        sr_cdbvalue(STRZERO(0,6))+','+; //7
                        sr_cdbvalue(STRZERO(0,4))+','+; //8
                        sr_cdbvalue('CN')+','+; //9
                        sr_cdbvalue(SUBSTR(DTOC(mdata_sis),7,4)+SUBSTR(DTOC(mdata_sis),4,2)+SUBSTR(DTOC(mdata_sis),1,2))+','+; //10
                        sr_cdbvalue(mhora)+','+; //11
                        sr_cdbvalue(mdata_sis)+','+; //12
                        sr_cdbvalue(criptografia(mlinha,'C') )+','+; //26
                        sr_cdbvalue(' ')+')',,.f.)

                SET CENTURY OFF
                mlinha := m_numeroSerie+SPACE(20-LEN(m_numeroSerie))+; //1
                        m_MFAdicional+; //2
                        m_ModeloImp+; //3
                        STRZERO(VAL(m_numerocaixa),2)+; //4
                        NCupom+SPACE(6-LEN(NCupom))+; //5
                        STRZERO(0,6)+; //6
                        m_Operacoes+SPACE(6-LEN(m_Operacoes))+; //7
                        SPACE(15)+; //8
                        STRZERO((mvlr_abertura*100)/100,13)+; //9
                        'N'+; //10
                        STRZERO(0,13)+; //11
                        DTOC(mdata_sis)

                sr_getconnection():exec('INSERT INTO r7 ('+;
                        'NUMERO_FAB  ,'+; //1
                        'MF_ADICIONAL,'+; //2
                        'MODELO_ECF  ,'+; //3
                        'NUMERO_USU  ,'+; //4
                        'COO         ,'+; //5
                        'CCF         ,'+; //6
                        'GNF         ,'+; //7
                        'MEIO_PAG    ,'+; //8
                        'VLR_PAGO    ,'+; //9
                        'IND_ESTORNO ,'+; //10
                        'VLR_ESTORNO ,'+; //11
                        'DATA_MOV    ,'+; //12
                        'CHV_CRIPT   ,'+; //13
                        'SR_DELETED )'+;
                        ' VALUES ('+;
                        sr_cdbvalue(m_numeroSerie)+','+; //1
                        sr_cdbvalue(m_MFAdicional)+','+; //2
                        sr_cdbvalue(m_ModeloImp)+','+; //3
                        sr_cdbvalue(STRZERO(VAL(m_numerocaixa),2))+','+; //4
                        sr_cdbvalue(NCupom)+','+; //5
                        sr_cdbvalue(STRZERO(0,6))+','+; //6
                        sr_cdbvalue(m_Operacoes)+','+; //7
                        sr_cdbvalue(SPACE(15))+','+; //8
                        sr_cdbvalue(STRZERO((mvlr_abertura*100)/100,13))+','+; //9
                        sr_cdbvalue('N')+','+; //10
                        sr_cdbvalue(STRZERO(0,13))+','+; //11
                        sr_cdbvalue(mdata_sis)+','+; //12
                        sr_cdbvalue(criptografia(mlinha,'C') )+','+; //26
                        sr_cdbvalue(' ')+')',,.f.)
                sr_getconnection():exec('COMMIT',,.f.)
        ELSEIF MenuId_ecf=MENU1_10  // 
                sac_d1()
        ELSEIF MenuId_ecf=MENU1_11  //
                sacbal1()
        ELSEIF MenuId_ecf=MENU2_1  // LEITURA X
                mvlr_abertura := 0
                op_tela(10,10,12,60,' ABERTURA DO CAIXA')
                DEVPOS(01,00);DEVOUT('Valor de Abertura R$:')
                @ 01,COL()+1 GET mvlr_abertura PICT '999,999.99'
                READ
                mopcao := op_simnao('S','Confirma o Valor de Abertura do Caixa:')
                wvw_lclosewindow()
                IF LASTKEY() = 27 .OR. mopcao = 'N'
                        RETURN .F.
                ENDIF
                mopcao := op_simnao('S','Confirma a ABERTURA DO CAIXA:')
                IF mopcao = 'S'
                        LEITURAX(SUBSTR(TRANSFORM(mvlr_abertura*100,'999999.99'),1,6))
                ENDIF
        ELSEIF MenuId_ecf=MENU2_1_1  // LEITURA X
                mopcao := op_simnao('N','Confirma a IMPRESSAO DA LEITURA X:')
                IF mopcao = 'S'
                        LEITURAX(STR(mvlr_abertura,2),1)
                ENDIF
        ELSEIF MenuId_ecf=MENU2_2  // OPERADOR
                mopcao := op_simnao('N','Apos fazer a REDUCAO Z e impossivel Emitir qualquer relatorio Fiscal ou Nao Fiscal e Nao sera possivel efetuar qualquer venda ou cancelamento durante este dia! - Confirma a impressao da LEITURA "Z":')
                IF mopcao = 'S'
                        **********
                        IF ! REDUCAOZ()
                                atencao('Nao foi possivel emitir a REDUCAO Z...')
                                RETURN .F.
                        ENDIF
                        **********
                ENDIF
        ELSEIF MenuId_ecf=MENU2_3
                MEMORIA_D('C')
        ELSEIF MenuId_ecf=MENU2_5  // GERENCIADOR PADRAO
                padm('P')
        ELSEIF MenuId_ecf=MENU2_6  // HIPERCARD
                padm('H')
        ELSEIF MenuId_ecf=MENU3_1  // PRODUTOS
                IF(m_set[1,93] <> 'A',f4_merc('*'),f4_merc1('*'))
        ELSEIF MenuId_ecf=MENU3_2  // CLIENTES
                *************
                IF ! AbriArq('insopera','sen');RETURN NIL;ENDIF
                IF ! AbriArq('saccep','cep');RETURN NIL;ENDIF
                IF ! AbriArq('saccli','cli');RETURN NIL;ENDIF
                IF ! AbriArq('sactabme','tabme');RETURN NIL;ENDIF
                IF ! AbriArq('regiao','reg');RETURN NIL;ENDIF
                IF ! AbriArq('sacmerc','merc');RETURN NIL;ENDIF
                IF ! AbriArq('sacforn','forn');RETURN NIL;ENDIF
                set_key('cliente')
                SELE('cli');ORDSETFOCUS(2)
                GO TOP
                *************
                f7_cli('*')
        ELSEIF MenuId_ecf=MENU3_3  // OPERADORES
                sacsenha('*')
        ELSEIF MenuId_ecf=MENU3_4  // forma de pagamento
                sac19('*',1)
        ELSEIF MenuId_ecf=MENU3_5  // CONFIGURACAO DO ECF
                sacconf_ecf()
        ELSEIF MenuId_ecf=MENU3_6  // CONFIGURACAO ALIQUOTAS
                sacecf_aliq()
        ELSEIF MenuId_ecf=MENU3_7  // CST
                saccst('*')
        ELSEIF MenuId_ecf=MENU3_8  // CFOP
                sac1op('*')
        ELSEIF MenuId_ecf=MENU_F3  // TAB.PRODUTO
                tab_produto()
        ELSEIF MenuId_ecf=MENU_F5  
                mov_ecf()
        ELSEIF MenuId_ecf=MENU_F6
                meio_pag()
        ELSEIF MenuId_ecf=MENU_F7  // forma de pagamento
                id_paf()
        ELSEIF MenuId_ecf=MENU_F6  // forma de pagamento
		m_forma := {}
        	AADD(m_forma,'FORMAS DE PAGAMENTOS COM VALORES R$'+'|'+SUBSTR(IBR_TotFormaPagamento(),5))
                IBR_RELATORIO(m_forma)
        ELSEIF MenuId_ecf=MENU_F9
                atencao('"ESTE PAF-ECF NAO EXECUTA FUNCAO DE BAIXA DE ESTOQUE COM BASE EM INDICES TECNICOS DE PRODUCAO, NAO PODENDO SER UTILIZADO POR ESTABELECIMENTO QUE NECESSITE DESTE."')
        ELSEIF MenuId_ecf=MENU_F10
                MEMORIA_D('S')
        ELSEIF MenuId_ecf=MENU_F11
                sacsint()
        ELSEIF MenuId_ecf=MENU_F12
                espelho_mfd()
        ELSEIF MenuId_ecf=MENU_F13
                sped()
        ELSEIF MenuId_ecf=MENU_F14
                arquivo_mfd()
        ELSEIF MenuId_ecf=MENU_F15
                sped_pc()
        ELSEIF MenuId_ecf=MENU_F16
                estoque_f('T')
        ELSEIF MenuId_ecf=MENU_F17
                estoque_f('P')
        ELSEIF MenuId_ecf=MENU_F18
                para_conf()
        ELSEIF MenuId_ecf=MENU_F19
                atencao('"ESTE PAF-ECF NAO UTILIZA ESTA FUNCAO."')
        ELSEIF MenuId_ecf = NBotaoEcf5  // MENU FISCAL
                IF mecf_ligada = 0
                        atencao('A impressora estar Desligada ou Desconectada...')
                ELSE
                        menu_fiscal()
                ENDIF
        ELSEIF MenuId_ecf = NBotaoEcf6  // pre-venda
                IF m_line = 'OFF'
                        atencao('Nao e possivel emitir PRE-VENDA em OFF-LINE')
                ELSE
                        sac_pv()
                ENDIF
        ELSEIF MenuId_ecf=MENUECFSAI_1 .OR. MenuId_ecf = NBotaoEcf7
                IBR_DESATIVA()
                IBR_END()
                wvw_lclosewindow()
                //apaga_hrb() //apaga o arquivo de controle "HRB.001"
                sr_getconnection():exec("UPDATE insopera SET terminal = '',data_acess = NULL,hora_acess = '' WHERE scod_op = "+sr_cdbvalue(cod_operado),,.f.)
                sr_getconnection():exec('COMMIT',,.f.)
                QUIT
        ELSEIF MenuId_ecf = NBotaoEcf8
                carga_dados()
        ELSEIF MenuId_ecf = NFE_1 // EMISSAO NOTA FISCAL ELETRONICA
                 sac211(,,,'E')
        ELSEIF MenuId_ecf = NFE_2 // EMISSAO DE NF.ELETRONICA  P/AGRUPAMENTO DE PEDIDOS
                 sac2ped(2,'E')
        ELSEIF MenuId_ecf = NFE_3 // 2A. VIA NFE
                 sac212('E')       
        ELSEIF MenuId_ecf = NFE_4 // CANCELAMENTO NF
                 sac213()      
        ELSEIF MenuId_ecf = NFE_5 // ALTERACAO/EXCLUSAO    NF
                 sac214()         
        ELSEIF MenuId_ecf = NFE_6 // EMISSAO NFE DE CORRECAO
                 sac211(,'*',,'E')
        ELSEIF MenuId_ecf = NFE_7 // CONSULTAR NFE
                 sac_nfe()
        ELSEIF MenuId_ecf = NFE_8 // ESTORNO CANCELAMENTO NOTA FISCAL
                 sac215()         
        ELSEIF MenuId_ecf = NFE_9 // ULTIMA NOTA FISCAL NUMERACAO
                 sac211b()        

        ELSEIF MenuId_ecf=NBotaoEcf4
                 alt_sen("1",1)
        ENDIF
ENDIF
RETURN nkey_ecf
******************************* f i m *********************************************
* VERIFICA SENHAS
*****************
FUNCTION senha_ecf(mflag,mecf)
******************************
LOCAL mcont,msenha,mdata_sen,mdata_aux,msenha_aux,mtela_sen,opcao,vsenha,vsenha1,;
      lci:=45,cci:=12,lba:=5,cba:=30,mtel_senha,aret:={},mdata_dat,q_merc,m_docapagar,ccomm,m_est_min,m_est_med

MEMVAR cod_operado

PUBLIC senha_acess,nivel_acess,mcod_oper:=0
mcont:=0
setcor(1)
WHILE .T.
        WHILE mcont <= 3
                SET CENTURY ON
	        botao(44,00,50,120)
		limpa(44,00,50,120)
		WVW_DrawImage( ,45,1,50,10,ALLTRIM(m_indiv[1,3])+'HRBUSU.jpg',.T.,.F.)
        	WVW_DrawImage( ,45,50,50,60,ALLTRIM(m_indiv[1,3])+'HRB.ICO',.T.,.F.)
                setcor(1)
                mensagem('Digite o Codigo de Operador')
		DEVPOS(lci,cci+1);DEVOUT('Codigo Operador:')
                DEVPOS(lci+2,cci+1);DEVOUT('Digite a Senha.:')
                DEVPOS(lci+4,cci+1);DEVOUT('Data do Sistema:')
                WVW_DrawBoxGet(,lci,cci+18,3)
                WVW_DrawBoxGet(,lci+2,cci+18,12)
                WVW_DrawBoxGet(,lci+4,cci+18,10)
                setcor(3)
                WVW_DrawLabel(,lci,cci+60,'F4 - MENU FISCAL',,,,, 'Arial Black',20,18,,,,,)
                DEVPOS(lci+3,cci+60);DEVOUT('CAMINHO DO ARQUIVO DE INICILALIZACAO PAF-ECF')
                DEVPOS(lci+4,cci+18);DEVOUT(mdata_sis)
                setcor(5)
                WVW_DrawBoxGet(,lci+5,cci+60,LEN(CURDRIVE()+':\'+CURDIR()+'\N_ECFPAF.TXT'))
                DEVPOS(lci+5,cci+60);DEVOUT(CURDRIVE()+':\'+CURDIR()+'\N_ECFPAF.TXT')
                setcor(1)
                SET CENTURY OFF
                @ lci,cci+18 GET mcod_oper PICT '999' VALID IF(EMPTY(mcod_oper),.F.,ven(mcod_oper))
                READ
                IF LASTKEY() = 27
                        IBR_END()
                        RETURN .F.
                ENDIF
                IF m_line = 'ON'
                        aret:={}
                        sr_getconnection():exec("SELECT snivel,scod_op,sult_e_c,sexpira,ssenha,stipo,snome,doc_apagar,estoq_min,estoq_med FROM insopera WHERE scod_op = "+sr_cdbvalue(STRZERO(mcod_oper,3)),,.t.,@aret)
                        IF aret[1,6] = 'B' .AND. STRZERO(mcod_oper,3) <> '999'
                                atencao('Este Usuario/Operador estar Bloqueado, Procure seu Administrador...')
                                LOOP
                        ENDIF
                ELSE
                        IF ! AbriArq('insopera','sen');wvw_lclosewindow();RETURN NIL;ENDIF
                        SELE('sen');ORDSETFOCUS(2)
                        IF sen->(DBSEEK(STRZERO(mcod_oper,3)))
                                IF sen->stipo = 'B' .AND. STRZERO(mcod_oper,3) <> '999'
                                        atencao('Este Usuario/Operador estar Bloqueado, Procure seu Administrador...')
                                        LOOP
                                ENDIF
                        ENDIF
                ENDIF
		IF FILE(ALLTRIM(m_indiv[1,31])+STRZERO(mcod_oper,3)+'.jpg')
		        WVW_DrawImage( ,45,1,50,10,ALLTRIM(m_indiv[1,31])+STRZERO(mcod_oper,3)+'.jpg',.T.,.F.)
		ENDIF
                mensagem('Operador: '+IF(m_line = 'ON',aret[1,7],sen->snome)+' - Digite sua SENHA')
                msenha = ''
                IF mcod_oper = 999
		        WVW_DrawImage( ,45,1,50,10,ALLTRIM(m_indiv[1,3])+'HRB.ICO',.T.,.F.)
			pegasenha(@msenha,lci+2,cci+18,setcor(2),12)
		ELSE
			pegasenha(@msenha,lci+2,cci+18,setcor(2))
		ENDIF
                setcor(1)
                IF msenha = 'NAO'
                        IBR_END()
                        RETURN .F.
                ENDIF
                IF EMPTY(msenha)
                        atencao('Senha Incorreta Tente Novamente')
                        TONE(100,6)
                        TONE(1600,6)
                        INKEY(2)
                        IF mcont = 3
                                IBR_END()
                                RETURN .F.
                        ENDIF
                        LOOP
                ENDIF
                mcont ++
                IF ALLTRIM(msenha) = 'HRB682110' .AND. STRZERO(mcod_oper,3) = '999'
                        nivel_acess := '1'
                        cod_operado := '999'
                        senha_acess := msenha
                        EXIT
                ENDIF
		// EX: 21/07/10  21+07+10 = 3 8
		// EX: ADM: SOMA  A= ANO+DIA = 31 - D= DIA+DIA= 42 - M= MES+DIA = 28
		// EX: 3 31 42 28 8
		mdig1 := SUBSTR(STRZERO(VAL(SUBSTR(DTOC(DATE()),7,2))+VAL(SUBSTR(DTOC(DATE()),1,2))+VAL(SUBSTR(DTOC(DATE()),4,2)),2),1,1)
		mdig2 := STRZERO(VAL(SUBSTR(DTOC(DATE()),7,2))+VAL(SUBSTR(DTOC(DATE()),1,2)),2)
		mdig3 := STRZERO(VAL(SUBSTR(DTOC(DATE()),1,2))+VAL(SUBSTR(DTOC(DATE()),1,2)),2)
		mdig4 := STRZERO(VAL(SUBSTR(DTOC(DATE()),4,2))+VAL(SUBSTR(DTOC(DATE()),1,2)),2)
		mdig5 := SUBSTR(STRZERO(VAL(SUBSTR(DTOC(DATE()),7,2))+VAL(SUBSTR(DTOC(DATE()),1,2))+VAL(SUBSTR(DTOC(DATE()),4,2)),2),2,1)

		//atencao(mdig1+mdig2+mdig3+mdig4+mdig5)
                //IF SUBSTR(msenha,1,6) = SUBSTR(DTOC(DATE()),7,2)+SUBSTR(DTOC(DATE()),1,2)+SUBSTR(DTOC(DATE()),4,2)
		IF SUBSTR(msenha,1,8) = mdig1+mdig2+mdig3+mdig4+mdig5 .AND. m_line = 'ON'
                        IF VAL(SUBSTR(msenha,9)) = 0
                                mdata_aux :=SPACE(11)
                        ELSE
                                //mdata_sen := DATE() + VAL(SUBSTR(msenha,7))
                                mdata_sen := DATE() + VAL(SUBSTR(msenha,9))
                                //mdata_aux := SUBSTR(DTOC(mdata_sen),1,2)+SUBSTR(DTOC(mdata_sen),4,2)+SUBSTR(DTOC(mdata_sen),7,2) + SUBSTR(msenha,1,6)
                                mdata_aux := SUBSTR(DTOC(mdata_sen),1,2)+SUBSTR(DTOC(mdata_sen),4,2)+SUBSTR(DTOC(mdata_sen),7,2) + SUBSTR(DTOC(DATE()),7,2)+SUBSTR(DTOC(DATE()),1,2)+SUBSTR(DTOC(DATE()),4,2)
                        ENDIF
                        SR_BEGINTRANSACTION()
                        TRY

                        sr_getconnection():exec("UPDATE sacsetup SET sysdatlm = "+sr_cdbvalue(mdata_aux),,.f.)
                        sr_getconnection():exec('COMMIT',,.f.)
                        CATCH e
                        SR_ENDTRANSACTION()
                        END

                        saccdx('P')
                        sacdbf()
                        nivel_acess := aret[1,1]
                        cod_operado := aret[1,2]
                        senha_acess := msenha
                        RETURN .T.
                ENDIF
                IF m_line = 'ON'
                        IF ALLTRIM(msenha) == ALLTRIM(DCRIPTO(aret[1,5])) .AND. m_line = 'ON'
                                SR_BEGINTRANSACTION()
                                TRY

                                sr_getconnection():exec("UPDATE insopera SET sult_ent = "+sr_cdbvalue(mdata_sis)+",shora_ini = "+sr_cdbvalue(SUBSTR(TIME(),1,5))+",sh_i_c = "+sr_cdbvalue(SUBSTR(m_indiv[1,1],1,5))+" WHERE scod_op = "+sr_cdbvalue(STRZERO(mcod_oper,3)),,.f.)
                                sr_getconnection():exec('COMMIT',,.f.)

                                CATCH e
                                SR_ENDTRANSACTION()
                                END
                                nivel_acess := aret[1,1]
                                cod_operado := aret[1,2]
                                senha_acess := msenha
                                IF (DATE() - aret[1,3]) >= aret[1,4] .AND. ! EMPTY(aret[1,4])
                                        op_tela(10,10,14,50,' Senha Expirou ')
                                        WHILE .T.
                                                DEVPOS(00,00);DEVOUT('Digite Nova Senha:')
                                                DEVPOS(01,00);DEVOUT('Digite  Novamente:')
                                                DEVPOS(02,00);DEVOUT('Confirma [S/n]...:')
                                                vsenha = ''
                                                vsenha1= ''
                                                pegasenha(@vsenha,00,20,setcor(2))
                                                setcor(1)
                                                IF LEN(vsenha) <= 1 .OR. EMPTY(vsenha) .OR. vsenha = 'NAO'
                                                        LOOP
                                                ENDIF
                                                pegasenha(@vsenha1,01,20,setcor(2))
                                                setcor(1)
                                                IF LEN(vsenha1) <= 1 .OR. vsenha1 = 'NAO'
                                                        LOOP
                                                ENDIF
                                                IF vsenha == vsenha1
                                                        opcao := 'S'
                                                        @ 02,20 GET opcao PICT '@!' VALID opcao $ 'S,N'
                                                        READ
                                                        IF LASTKEY() = 27 .OR. opcao = 'N'
                                                                LOOP
                                                        ENDIF           
                                                        wvw_lclosewindow()
                                                        SR_BEGINTRANSACTION()
                                                        TRY
                                                        sr_getconnection():exec("UPDATE insopera SET ssenha = "+sr_cdbvalue(CRIPTO(vsenha))+",sult_e_c = "+sr_cdbvalue(DATE())+" WHERE scod_op = "+sr_cdbvalue(STRZERO(mcod_oper,3)),,.f.)
                                                        sr_getconnection():exec('COMMIT',,.f.)
                                                        CATCH e
                                                        SR_ENDTRANSACTION()
                                                        END
                                                        EXIT
                                                ELSE
                                                        atencao('Senha Digitada Errada, Tente novamente !!!')
                                                        LOOP
                                                ENDIF
                                        ENDDO
                                        EXIT
                                ELSE
                                        EXIT
                                ENDIF
                        ENDIF
                ELSEIF m_line = 'OFF'
                        IF ALLTRIM(msenha) == ALLTRIM(DCRIPTO(ALLTRIM(sen->ssenha)))
                                nivel_acess := sen->snivel
                                cod_operado := sen->scod_op
                                senha_acess := msenha
                                EXIT
                        ENDIF
                ELSE
                        atencao('Senha Incorreta Tente Novamente')
                        TONE(100,6)
                        TONE(1600,6)
                        INKEY(2)
                        IF mcont = 3
                                IBR_END()
                                RETURN .F.
                        ENDIF
                        LOOP
                ENDIF

        ENDDO
        WHILE .T. .AND. m_line = 'ON'
                SET CENTURY ON
		mensagem('Confira a Data do Sistema')
                //c_ped:={}
                //sr_getconnection():exec("SELECT MAX(pdat_ped) FROM sacped_s",,.t.,@c_ped)
                setcor(1)
                WVW_DrawBoxGet(,lci+4,cci+18,10)
                @ lci+4,cci+18 GET mdata_sis
                READ
                mdata_dat := DATE()
                IF ver_serie() = '141237'
                //IF ver_serie() = '141302'
                        IF mdata_sis > DATE() + 1
                                atencao('A Data informada estar com mais de 1 dias: '+DTOC(mdata_sis))
                                IF ! ver_nivel('ALT_DATA','ALTERACAO DA DATA DO SISTEMA','1245',nivel_acess,,'AMBIE')
                                        LOOP
                                ENDIF
                        ENDIF
                        IF mdata_sis < DATE() - 1
                                atencao('A Data informada estar com mais de -1 dias: '+DTOC(mdata_sis))
                                IF ! ver_nivel('ALT_DATA','ALTERACAO DA DATA DO SISTEMA','1245',nivel_acess,,'AMBIE')
                                        LOOP
                                ENDIF
                        ENDIF
                ELSE
                        IF mdata_sis > DATE() + 10
                                atencao('A Data informada estar com mais de 10 dias: '+DTOC(mdata_sis))
                                IF ! ver_nivel('ALT_DATA','ALTERACAO DA DATA DO SISTEMA','1245',nivel_acess,,'AMBIE')
                                        LOOP
                                ENDIF
                        ENDIF
                        c_caixa:={}
                        sr_getconnection():exec("SELECT MAX(data) FROM saccaixa",,.t.,@c_caixa)
                        IF mdata_sis < c_caixa[1,1]
		      	       mdata_dat := c_caixa[1,1]
                        ENDIF
                        IF mdata_sis <> mdata_dat
                                IF ! ver_nivel('ALT_DATA','ALTERACAO DA DATA DO SISTEMA','1245',nivel_acess,,'AMBIE')
                                        LOOP
                                ENDIF
                        ENDIF
                ENDIF
                IF LASTKEY() = 27 .OR. EMPTY(mdata_sis)
                        LOOP
                ELSE
	                EXIT
	       	ENDIF
        ENDDO
        SET CENTURY OFF
        EXIT
ENDDO
//wvw_lclosewindow()
* ERRO DO SISTEMA**********
erro()
********************
IF mflag <> NIL
        CLOSE sen
        RETURN .T.
ENDIF
sacecf(mecf)
CLOSE sen
RETURN .T.
********************************** f i m **************************************
FUNCTION carga_dados()
***************************
LOCAL mhora,mdt,m_carga := {},i:=0
mhora:=TIME()
mdt  :=mdata_sis
//atencao('Carga de dados')
op_tela(10,10,14,85,'CARGA DE DADOS PARA O SISPDV...')

merc->( dbCloseArea() )

IF Ferase(CURDRIVE()+':\'+CURDIR()+'\sacmerc.dbf') == -1
        atencao("Nao foi possivel apagar o arquivo " +CURDRIVE()+':\'+CURDIR()+'\sacmerc.dbf' )
        fecha_tela()
        RETURN .F.
ENDIF
Ferase(CURDRIVE()+':\'+CURDIR()+'\sacmerc.cdx')

IF Ferase(CURDRIVE()+':\'+CURDIR()+'\saccli.dbf') == -1
        atencao("Nao foi possivel apagar o arquivo " +CURDRIVE()+':\'+CURDIR()+'\saccli.dbf' )
        fecha_tela()
        RETURN .F.
ENDIF
Ferase(CURDRIVE()+':\'+CURDIR()+'\saccli.cdx')

IF Ferase(CURDRIVE()+':\'+CURDIR()+'\insopera.dbf') == -1
        atencao("Nao foi possivel apagar o arquivo " +CURDRIVE()+':\'+CURDIR()+'\insopera.dbf' )
        fecha_tela()
        RETURN .F.
ENDIF
Ferase(CURDRIVE()+':\'+CURDIR()+'\insopera.cdx')

sacdbf(,,'DBF')
DEVPOS(01,01);DEVOUT('COPIANDO OS PRODUTOS: ')
DEVPOS(02,01);DEVOUT('COPIANDO OS CLIENTES: ')
DEVPOS(03,01);DEVOUT('COPIANDO OS OPERADOR: ')

mensagem('Aguarde um momento fazendo a copia da TABELA p/ARQUIVO.DFB...')

IF ! AbriArq("insopera","sen","E","DBF");RETURN NIL;ENDIF
IF ! AbriArq("saccli","cli","E","DBF");RETURN NIL;ENDIF
IF ! AbriArq("sacmerc","merc","E","DBF");RETURN NIL;ENDIF
SELE('merc')

m_carga := {}
sr_getconnection():exec("SELECT * FROM sacmerc",,.t.,@m_carga)

IF LEN(m_carga) > 0
	i := 0
        FOR i = 1 TO LEN(m_carga)
                DEVPOS(01,23);DEVOUT(m_carga[i,8]+' - '+m_carga[i,9])
                ADIREG()
                merc->empresa   := m_carga[i,1]
                merc->cod_barr  := m_carga[i,2]
                merc->cod_barr1 := m_carga[i,3]
                merc->descri1   := m_carga[i,4]
                merc->cod_barr3 := m_carga[i,5]
                merc->ref       := m_carga[i,6]
                merc->gru_sub   := m_carga[i,7]
                merc->cod_merc  := m_carga[i,8]
                merc->merc      := m_carga[i,9]
                merc->tipo_merc := m_carga[i,10]
                merc->balanca   := m_carga[i,11]
                merc->data_atu  := mdata_sis
                merc->data_cad  := m_carga[i,13]
                merc->unidade   := m_carga[i,14]
                merc->especie   := m_carga[i,15]
                merc->peso_liq  := m_carga[i,16]
                merc->peso      := m_carga[i,17]
                merc->volume    := m_carga[i,18]
                merc->metragem  := m_carga[i,19]
                merc->pacote    := m_carga[i,20]
                merc->alimento  := m_carga[i,21]
                merc->p_lucro   := m_carga[i,22]
                merc->promocao  := m_carga[i,23]
                merc->disp      := m_carga[i,24]
                merc->livre_desc:= m_carga[i,25]
                merc->comissao  := m_carga[i,26]
                merc->com_mont  := m_carga[i,27]
                merc->est_min   := m_carga[i,28]
                merc->est_max   := m_carga[i,29]
                merc->cod_fab   := m_carga[i,30]
                merc->fabrica   := m_carga[i,31]
                merc->dat_ult_s := m_carga[i,32]
                merc->dat_ult_e := m_carga[i,33]
                merc->saldo_ant := m_carga[i,34]
                merc->a_pr_unit := m_carga[i,35]
                merc->a_vlr_merc:= m_carga[i,36]
                merc->a_cust_mer:= m_carga[i,37]
                merc->a_cust_rea:= m_carga[i,38]
                merc->a_pr_venda:= m_carga[i,39]
                merc->a_pr_medio:= m_carga[i,40]
                merc->pr_nota   := m_carga[i,41]
                merc->pr_unit   := m_carga[i,42]
                merc->vlr_merc  := m_carga[i,43]
                merc->cust_merc := m_carga[i,44]
                merc->cust_real := m_carga[i,45]
                merc->pr_venda  := m_carga[i,46]
                merc->pr_venda1 := m_carga[i,47]
                merc->pr_medio  := m_carga[i,48]
                merc->pr_fat    := m_carga[i,49]
                merc->varejo    := m_carga[i,50]
                merc->ul_alt_pr := m_carga[i,51]
                merc->opera_pr  := m_carga[i,52]
                merc->tipo_op   := m_carga[i,53]
                merc->hora      := TIME()
                merc->saldo_fis := m_carga[i,55]
                merc->saldo_mer := m_carga[i,56]
                merc->saldo_av  := m_carga[i,57]
                merc->saldo_comp:= m_carga[i,58]
                merc->saldo_est := m_carga[i,59]
                merc->icm       := m_carga[i,60]
                merc->isento    := m_carga[i,61]
                merc->bebida    := m_carga[i,62]
                merc->icm_sub   := m_carga[i,63]
                merc->icm_sub2  := m_carga[i,64]
                merc->ipi       := m_carga[i,65]
                merc->cod_clf   := m_carga[i,66]
                merc->cod_fis   := m_carga[i,67]
                merc->sittrib   := m_carga[i,68]
                merc->prodepe   := m_carga[i,69]
                merc->nbm       := m_carga[i,70]
                merc->desc_icm  := m_carga[i,71]
                merc->desc_icm1 := m_carga[i,72]
                merc->local     := m_carga[i,73]
                merc->gramatura := m_carga[i,74]
                merc->prazo     := m_carga[i,75]
                merc->fatconv   := m_carga[i,76]
                merc->doc_ent_a := m_carga[i,77]
                merc->doc_ent   := m_carga[i,78]
                merc->envelope  := m_carga[i,79]
                merc->desc_merc := m_carga[i,80]
                merc->iat       := m_carga[i,81]
                merc->ind_icms  := m_carga[i,82]
                merc->sit_trib  := m_carga[i,83]
                merc->dolar     := m_carga[i,84]
                merc->aplic0    := m_carga[i,85]
                merc->aplic1    := m_carga[i,86]
                merc->aplic2    := m_carga[i,87]
                merc->aplic3    := m_carga[i,88]
                merc->aplic4    := m_carga[i,89]
                merc->atualiza  := m_carga[i,90]
                merc->ippt      := m_carga[i,91]
                merc->cod2      := m_carga[i,92]
                merc->cod3      := m_carga[i,93]
                merc->cod4      := m_carga[i,94]
                merc->data_falta:= m_carga[i,95]
                merc->cod_falta := m_carga[i,96]
                merc->qtd_falta := m_carga[i,97]
                merc->pocket    := m_carga[i,98]
                merc->descri    := m_carga[i,99]
                merc->pr_venda2 := m_carga[i,100]
                merc->pr_venda3 := m_carga[i,101]
                merc->pr_venda4 := m_carga[i,102]
                merc->sld_neg   := m_carga[i,103]
                merc->descont   := m_carga[i,104]
                merc->cst_pis   := m_carga[i,105]
                merc->cst_conf  := m_carga[i,106]
                merc->chv_cript := m_carga[i,107]
	NEXT
ENDIF
SELE('cli')
m_carga := {}
sr_getconnection():exec("SELECT * FROM saccli",,.t.,@m_carga)
IF LEN(m_carga) > 0
	i := 0
        FOR i = 1 TO LEN(m_carga)
                DEVPOS(02,23);DEVOUT(m_carga[i,2]+' - '+m_carga[i,3])
                ADIREG()
                cli->empresa      := m_carga[i,1]
                cli->cod_cli      := m_carga[i,2]
                cli->razao        := m_carga[i,3]
                cli->nome         := m_carga[i,4]
                cli->data_cad     := m_carga[i,5]
                cli->data_atu     := m_carga[i,6]
                cli->cadastro     := m_carga[i,7]
                cli->tipo         := m_carga[i,8]
                cli->nascimento   := m_carga[i,9]
                cli->num_ped      := m_carga[i,10]
                cli->ult_comp     := m_carga[i,11]
                cli->vlr_comp     := m_carga[i,12]
                cli->ant_ped      := m_carga[i,13]
                cli->dat_ant      := m_carga[i,14]
                cli->vlr_ant      := m_carga[i,15]
                cli->numped_m     := m_carga[i,16]
                cli->ultcomp_m    := m_carga[i,17]
                cli->vlrcomp_m    := m_carga[i,18]
                cli->tot_comp     := m_carga[i,19]
                cli->ult_orc      := m_carga[i,20]
                cli->endereco     := m_carga[i,21]
                cli->bairro       := m_carga[i,22]
                cli->codcid       := m_carga[i,23]
                cli->cidade       := m_carga[i,24]
                cli->uf           := m_carga[i,25]
                cli->cep          := m_carga[i,26]
                cli->email        := m_carga[i,27]
                cli->rota         := m_carga[i,28]
                cli->tel1         := m_carga[i,29]
                cli->tel2         := m_carga[i,30]
                cli->fax          := m_carga[i,31]
                cli->cgc          := m_carga[i,32]
                cli->insc         := m_carga[i,33]
                cli->cpf          := m_carga[i,34]
                cli->rg           := m_carga[i,35]
                cli->orgao        := m_carga[i,36]
                cli->dat_emi      := m_carga[i,37]
                cli->comprado     := m_carga[i,38]
                cli->contato      := m_carga[i,39]
                cli->prazo_pag    := m_carga[i,40]
                cli->bloqueio     := m_carga[i,41]
                cli->spc          := m_carga[i,42]
                cli->area         := m_carga[i,43]
                cli->limite       := m_carga[i,44]
                cli->atac_vare    := m_carga[i,45]
                cli->dia_atras    := m_carga[i,46]
                cli->qtd_doc      := m_carga[i,47]
                cli->obs          := m_carga[i,48]
                cli->nome1        := m_carga[i,49]
                cli->data_nas1    := m_carga[i,50]
                cli->nome2        := m_carga[i,51]
                cli->data_nas2    := m_carga[i,52]
                cli->nome3        := m_carga[i,53]
                cli->data_nas3    := m_carga[i,54]
                cli->nome4        := m_carga[i,55]
                cli->data_nas4    := m_carga[i,56]
                cli->nome5        := m_carga[i,57]
                cli->data_nas5    := m_carga[i,58]
                cli->desconto     := m_carga[i,59]
                cli->dia1_ini     := m_carga[i,60]
                cli->dia1_fim     := m_carga[i,61]
                cli->venc1_dup    := m_carga[i,62]
                cli->dia2_ini     := m_carga[i,63]
                cli->dia2_fim     := m_carga[i,64]
                cli->venc2_dup    := m_carga[i,65]
                cli->empre_c      := m_carga[i,66]
                cli->cargo_c      := m_carga[i,67]
                cli->salario_c    := m_carga[i,68]
                cli->end_c        := m_carga[i,69]
                cli->bairro_c     := m_carga[i,70]
                cli->cidade_c     := m_carga[i,71]
                cli->uf_c         := m_carga[i,72]
                cli->cep_c        := m_carga[i,73]
                cli->fone_c1      := m_carga[i,74]
                cli->fone_c2      := m_carga[i,75]
                cli->loja1        := m_carga[i,76]
                cli->tel_loja1    := m_carga[i,77]
                cli->desde1       := m_carga[i,78]
                cli->loja2        := m_carga[i,79]
                cli->tel_loja2    := m_carga[i,80]
                cli->desde2       := m_carga[i,81]
                cli->nome_r1      := m_carga[i,82]
                cli->fone_r1      := m_carga[i,83]
                cli->nome_r2      := m_carga[i,84]
                cli->fone_r2      := m_carga[i,85]
                cli->banco1       := m_carga[i,86]
                cli->ag1          := m_carga[i,87]
                cli->conta1       := m_carga[i,88]
                cli->banco2       := m_carga[i,89]
                cli->ag2          := m_carga[i,90]
                cli->conta2       := m_carga[i,91]
                cli->cartao1      := m_carga[i,92]
                cli->no1          := m_carga[i,93]
                cli->venc1        := m_carga[i,94]
                cli->cartao2      := m_carga[i,95]
                cli->no2          := m_carga[i,96]
                cli->venc2        := m_carga[i,97]
                cli->pai          := m_carga[i,98]
                cli->mae          := m_carga[i,99]
                cli->end_cob      := m_carga[i,100]
                cli->bairro_cob   := m_carga[i,101]
                cli->cidade_cob   := m_carga[i,102]
                cli->uf_cob       := m_carga[i,103]
                cli->cep_cob      := m_carga[i,104]
                cli->fone_cob     := m_carga[i,105]
                cli->codvend      := m_carga[i,106]
                cli->codoper      := m_carga[i,107]
                cli->codforn      := m_carga[i,108]
                cli->regiao       := m_carga[i,109]
                cli->atividade    := m_carga[i,110]
                cli->qtdvis       := m_carga[i,111]
                cli->uvisita      := m_carga[i,112]
                cli->l_obs1       := m_carga[i,113]
                cli->l_obs2       := m_carga[i,114]
                cli->l_obs3       := m_carga[i,115]
                cli->naturalida   := m_carga[i,116]
                cli->l_obs5       := m_carga[i,117]
                cli->l_obs6       := m_carga[i,118]
                cli->l_obs7       := m_carga[i,119]
                cli->l_obs8       := m_carga[i,120]
                cli->l_obs9       := m_carga[i,121]
                cli->l_obs10      := m_carga[i,122]
                cli->l_obs11      := m_carga[i,123]
                cli->l_obs12      := m_carga[i,124]
                cli->l_obs13      := m_carga[i,125]
                cli->l_obs14      := m_carga[i,126]
                cli->l_obs15      := m_carga[i,127]
                cli->l_obs16      := m_carga[i,128]
                cli->l_obs17      := m_carga[i,129]
                cli->l_obs18      := m_carga[i,130]
                cli->l_obs19      := m_carga[i,131]
                cli->l_obs20      := m_carga[i,132]
                cli->cod_cond     := m_carga[i,133]
                cli->pocket       := m_carga[i,134]
                cli->cod_profi    := m_carga[i,135]
                cli->numero       := m_carga[i,136]
                cli->complement   := m_carga[i,137]
                cli->data_bloq    := m_carga[i,138]
                cli->obs_bloq     := m_carga[i,139]
                cli->rota1        := m_carga[i,140]
	NEXT
ENDIF
SELE('sen')
m_carga := {}
sr_getconnection():exec("SELECT * FROM insopera",,.t.,@m_carga)
IF LEN(m_carga) > 0
	i := 0
        FOR i = 1 TO LEN(m_carga)
                DEVPOS(03,23);DEVOUT(m_carga[i,2]+' - '+m_carga[i,3])
                ADIREG()
                sen->scod_op      := m_carga[i,1]
                sen->snome        := m_carga[i,2]
                sen->stipo        := m_carga[i,3]
                sen->stipo_sis    := m_carga[i,4]
                sen->ssenha       := m_carga[i,5]
                sen->sdata_cad    := m_carga[i,6]
                sen->scomissao    := m_carga[i,7]
                sen->scom_praz    := m_carga[i,8]
                sen->scom_oper    := m_carga[i,9]
                sen->scota        := m_carga[i,10]
                sen->sult_ent     := m_carga[i,11]
                sen->sult_fim     := m_carga[i,12]
                sen->snivel       := m_carga[i,13]
                sen->shora_ini    := m_carga[i,14]
                sen->shora_fim    := m_carga[i,15]
                sen->sult_e_c     := m_carga[i,16]
                sen->sh_i_c       := m_carga[i,17]
                sen->sexpira      := m_carga[i,18]
                sen->scod_aut     := m_carga[i,19]
                sen->sstatus      := m_carga[i,20]
                sen->sope         := m_carga[i,21]
                sen->scliente     := m_carga[i,22]
                sen->sproduto     := m_carga[i,23]
                sen->svalor       := m_carga[i,24]
                sen->sbloq        := m_carga[i,25]
                sen->smensagem    := m_carga[i,26]
                sen->sambiente    := m_carga[i,27]
                sen->doc_apagar   := m_carga[i,28]
                sen->estoq_min    := m_carga[i,29]
                sen->estoq_med    := m_carga[i,30]
                sen->terminal     := m_carga[i,31]
                sen->data_acess   := m_carga[i,32]
                sen->hora_acess   := m_carga[i,33]
                sen->email        := m_carga[i,34]
	NEXT
ENDIF
DBCOMMITALL()
merc->( dbCloseArea() )
cli->( dbCloseArea() )
sen->( dbCloseArea() )
DBUNLOCKALL()



/*
dbUseArea( .T., "SQLRDD", 'sacmerc', "sql_merc", .F. )
MYRUN('DELETE sacmerc.dbf')
MYRUN('DELETE sacmerc.cdx')
copy to "sacmerc" via "DBFCDX"
sql_merc->( dbCloseArea() )

IF ! AbriArq("sacmerc","merc","E");RETURN NIL;ENDIF
SELE('merc')
limpa(00,00,02,100)
DEVPOS(01,01);DEVOUT('ATUALIZANDO O ARQUIVO DE MERCADORIA...')
GO TOP
BLOQARQ()
WHILE ! EOF()
        mensagem('Produto: '+merc->cod_merc+' - '+merc->merc)
        merc->hora := mhora
        merc->data_atu := mdt
        SKIP
ENDDO

DEVPOS(01,01);DEVOUT('COPIANDO O ARQUIVO DE CLIENTES, AGUARDE....')
mensagem('Aguarde um momento fazendo a copia da TABELA p/ARQUIVO.DFB...')
dbUseArea( .T., "SQLRDD", 'saccli', "sql_cli", .F. )
copy to "saccli" via "DBFCDX"
sql_cli->( dbCloseArea() )

*/
atencao('Foi feito a Atualizacao com SUCESSO....')
fecha_tela()
RETURN NIL